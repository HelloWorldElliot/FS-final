{"ast":null,"code":"var _jsxFileName = \"/Users/jax_king/Desktop/2024 Spring/Full_Stack/Final/FS-final/ui/src/components/App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\nfunction App() {\n  const [noteList, updateNoteList] = useState([]);\n\n  // Fetch notes from backend on initial load\n  async function fetchNotes() {\n    try {\n      const response = await fetch('http://localhost:5000/api/notetaker/GetNotes');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      updateNoteList(data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  }\n  useEffect(() => {\n    // Define an asynchronous function inside the useEffect\n\n    // Call the async function\n    fetchNotes();\n  }, []);\n  function addNote(noteToAdd) {\n    fetch('http://localhost:5000/api/notetaker/AddNotes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(noteToAdd)\n    }).then(response => response.json()).then(note => {\n      updateNoteList(currentNotes => [...currentNotes, note]);\n    }).catch(error => console.error('Error adding note:', error));\n  }\n\n  // Delete note from backend and update state\n  function deleteNote(noteId) {\n    fetch(\"http://localhost:5000/api/notetaker/DeleteNotes?key=\".concat(noteId), {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      updateNoteList(currentNotes => currentNotes.filter(note => note.key !== noteId));\n    }).catch(error => console.error('Error deleting note:', error));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddNote, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), noteList.map((item, idx) => /*#__PURE__*/React.createElement(Note, {\n    key: item.key,\n    id: idx,\n    title: item.title,\n    content: item.content,\n    onDelete: () => deleteNote(item.key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Note","AddNote","App","noteList","updateNoteList","fetchNotes","response","fetch","ok","Error","data","json","error","console","addNote","noteToAdd","method","headers","body","JSON","stringify","then","note","currentNotes","catch","deleteNote","noteId","concat","filter","key","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","map","item","idx","id","title","content","onDelete"],"sources":["/Users/jax_king/Desktop/2024 Spring/Full_Stack/Final/FS-final/ui/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\nfunction App() {\n  const [noteList, updateNoteList] = useState([]);\n\n  // Fetch notes from backend on initial load\n  async function fetchNotes() {\n    try {\n      const response = await fetch('http://localhost:5000/api/notetaker/GetNotes');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      updateNoteList(data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  }\n  \n  useEffect(() => {\n    // Define an asynchronous function inside the useEffect\n    \n\n    // Call the async function\n    fetchNotes();\n  }, []);\n\n  function addNote(noteToAdd) {\n    fetch('http://localhost:5000/api/notetaker/AddNotes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(noteToAdd)\n    })\n    .then(response => response.json())\n    .then(note => {\n      updateNoteList(currentNotes => [...currentNotes, note]);\n    })\n    .catch(error => console.error('Error adding note:', error));\n  }\n\n  // Delete note from backend and update state\n  function deleteNote(noteId) {\n    fetch(`http://localhost:5000/api/notetaker/DeleteNotes?key=${noteId}`, {\n      method: 'DELETE'\n    })\n    .then(response => response.json())\n    .then(() => {\n      updateNoteList(currentNotes => currentNotes.filter((note) => note.key !== noteId));\n    })\n    .catch(error => console.error('Error deleting note:', error));\n  }\n\n  return (\n    <div>\n      <Header />\n      <AddNote onAdd={addNote} />\n      {noteList.map((item, idx) => (\n        <Note\n          key={item.key}\n          id={idx}\n          title={item.title}\n          content={item.content}\n          onDelete={() => deleteNote(item.key)}\n        />\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}