{"ast":null,"code":"var _jsxFileName = \"/Users/jax_king/Desktop/2024 Spring/Full_Stack/Final/FS-final/ui/src/components/App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\nfunction App() {\n  const [noteList, updateNoteList] = useState([]);\n\n  // Fetch notes from backend on initial load\n  async function fetchNotes() {\n    try {\n      const response = await fetch('http://localhost:5000/api/notetaker/GetNotes');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      updateNoteList(data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  }\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  async function addNote(noteToAdd) {\n    try {\n      const response = await fetch('http://localhost:5000/api/notetaker/AddNotes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(noteToAdd)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      await response.json();\n      await fetchNotes(); // Refresh notes list after adding\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  }\n\n  // Delete a note and refresh the note list\n  async function deleteNote(noteId) {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/notetaker/DeleteNotes?key=\".concat(noteId), {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      await response.json();\n      await fetchNotes(); // Refresh notes list after deleting\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddNote, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), noteList.map((item, idx) => /*#__PURE__*/React.createElement(Note, {\n    key: item.key,\n    id: idx,\n    title: item.title,\n    content: item.content,\n    onDelete: () => deleteNote(item.key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","Note","AddNote","App","noteList","updateNoteList","fetchNotes","response","fetch","ok","Error","data","json","error","console","addNote","noteToAdd","method","headers","body","JSON","stringify","deleteNote","noteId","concat","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","map","item","idx","key","id","title","content","onDelete"],"sources":["/Users/jax_king/Desktop/2024 Spring/Full_Stack/Final/FS-final/ui/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\nfunction App() {\n  const [noteList, updateNoteList] = useState([]);\n\n  // Fetch notes from backend on initial load\n  async function fetchNotes() {\n    try {\n      const response = await fetch('http://localhost:5000/api/notetaker/GetNotes');\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      updateNoteList(data);\n    } catch (error) {\n      console.error('Error fetching notes:', error);\n    }\n  }\n  \n  useEffect(() => {\n    fetchNotes();\n  }, []);\n\n  async function addNote(noteToAdd) {\n    try {\n      const response = await fetch('http://localhost:5000/api/notetaker/AddNotes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(noteToAdd)\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      await response.json();\n      await fetchNotes(); // Refresh notes list after adding\n    } catch (error) {\n      console.error('Error adding note:', error);\n    }\n  }\n\n  // Delete a note and refresh the note list\n  async function deleteNote(noteId) {\n    try {\n      const response = await fetch(`http://localhost:5000/api/notetaker/DeleteNotes?key=${noteId}`, {\n        method: 'DELETE'\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      await response.json();\n      await fetchNotes(); // Refresh notes list after deleting\n    } catch (error) {\n      console.error('Error deleting note:', error);\n    }\n  }\n\n  return (\n    <div>\n      <Header />\n      <AddNote onAdd={addNote} />\n      {noteList.map((item, idx) => (\n        <Note\n          key={item.key}\n          id={idx}\n          title={item.title}\n          content={item.content}\n          onDelete={() => deleteNote(item.key)}\n        />\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}